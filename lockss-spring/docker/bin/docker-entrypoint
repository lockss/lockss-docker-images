#!/bin/sh

# Copyright (c) 2000-2019, Board of Trustees of Leland Stanford Jr. University
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

_0="$(basename "${0}")"

JVM_OPTS_DOCKER='-XX:+StartAttachListener -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap'
JVM_OPTS_LOGGING='-Dorg.lockss.defaultLogLevel=debug -Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager -Dorg.springframework.boot.logging.LoggingSystem=none'
JVM_OPTS_TMP="-Djava.io.tmpdir=${LOCKSS_TMP}"
LOCKSS_TMP_TRASH="${LOCKSS_TMP}/../lockss-trash"
LOCKSS_JAR="${LOCKSS_HOME}/lib/lockss.jar"
STARTUP_FILE="${LOCKSS_PIDS}/${_0}.startup"
PID_FILE="${LOCKSS_PIDS}/${_0}.pid"

# $1=exitcode
Exit()
{
  rm -f "${STARTUP_FILE}"
  exit "${1}"
}

Check_Set()
{
  if [ -z "${1}" ]; then
    echo "${_0}: environment variable not set: ${2}"
    Exit 1
  fi
}

# Beginning

#Setup the lockss user and group first
Check_Set "${LOCKSS_GROUP}" LOCKSS_GROUP
Check_Set "${LOCKSS_GID}" LOCKSS_GID
Check_Set "${LOCKSS_USER}" LOCKSS_USER
Check_Set "${LOCKSS_UID}" LOCKSS_UID

 addgroup --system \
          --gid "$LOCKSS_GID" \
          "$LOCKSS_GROUP" \
 && adduser  --system \
          --disabled-password \
          --gecos "LOCKSS USER" \
          --uid "$LOCKSS_UID" \
          --ingroup "$LOCKSS_GROUP" \
          --shell "/bin/sh" \
          "$LOCKSS_USER"

export OLDPATH="${PATH}"

su "$LOCKSS_USER" -p -c /usr/local/bin/lockss-entrypoint