#!/usr/bin/env bash

# Copyright (c) 2000-2019, Board of Trustees of Leland Stanford Jr. University
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

_0="$(basename "${0}")"

Apply_Config()
{
  if [ -d "${1}" ]; then
    : \
    && TMP=$(mktemp -d) \
    && cd "${TMP}" \
    && ( cd "${1}" && tar cf - . ) | tar xf - \
    && for f in $(find . -type f -name '*.tpl'); do
         envsubst < "${f}" > "$(dirname "${f}")/$(basename "${f}" '.tpl')"
       done \
    && cd "${HADOOP_HOME}/etc/hadoop" \
    && ( cd "${TMP}" && tar cf - --exclude '*.tpl' . ) | tar xf -
    RET=$?
    rm -rf "${TMP}"
    return $RET
  else
    return 0
  fi
}

Check_Dir()
{
  if [ ! -d "${1}" ]; then
    echo "${_0}: ${1} is missing"
    exit 1
  fi
}

Check_Executable()
{
  if ! which "${1}" > /dev/null 2>&1 ; then
    echo "${_0}: ${1} not on the PATH"
    exit 1
  fi
}

: \
&& Check_Dir "${HADOOP_LOGS}" \
&& Check_Dir "${HADOOP_DATA}" \
&& Check_Executable 'envsubst' \
&& Check_Executable 'lockss-hdfs-launch-sshd' \
&& lockss-hdfs-launch-sshd \
&& mkdir -p "${HADOOP_HOME}/etc/hadoop" \
&& Apply_Config "${HADOOP_HOME}/etc.orig/hadoop" \
&& Apply_Config "${HADOOP_HOME}/etc.base/hadoop" \
&& Apply_Config "${HADOOP_CONF}" \
&& if [ ! -f "${HADOOP_DATA}/dfs/name/current/VERSION" ]; then ( yes n | "${HADOOP_HOME}/bin/hdfs" namenode -format ) ; fi \
&& "${HADOOP_HOME}/sbin/start-dfs.sh" \
&& tail -f "${HADOOP_LOGS}/"*.log "${HADOOP_LOGS}/"*.out
